group 'net.andreask'
version '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

repositories {
    mavenCentral()
}
// initialize property ${glassfishHome} in ~/.gradle/gradle.properties and set
// glassfishHome=< home of your glassfish folder e.g. glassfishHome=C:/Program Files/glassfish4 >


dependencies {
    println "read dependencies ..."
    providedCompile group: 'javax', name: 'javaee-api', version: '7.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile files('lib/hbci4java-2.5.12.jar')
    compile 'org.apache.logging.log4j:log4j-1.2-api:2.5'
    compile 'org.iban4j:iban4j:3.2.0'
    compile 'com.thoughtworks.xstream:xstream-distribution:1.4.8'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'org.jboss.arquillian:arquillian-bom:1.1.10.Final'
    testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.10.Final'
    testCompile 'org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.0.CR4'
    testCompile 'org.glassfish.main.extras:glassfish-embedded-web:4.1.1'
    testCompile 'org.jboss.weld:weld-core:2.3.2.Final'
//    compile project(':hbci4java')
}

task getHBCI(group: 'build setup') {
    println "executing getHBCI ..."
    def sirDir = new File(project.projectDir, "/lib")
    sirDir.mkdirs()
    ant.get(src: 'https://github.com/willuhn/hibiscus/raw/master/lib/hbci4java-2.5.12.jar', dest: 'lib/hbci4java-2.5.12.jar', skipexisting:
            'true')
}


task startDB(type: Exec, group: 'build setup') {
    println "executing dbStart ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "start-database"

}


task stopDB(type: Exec, ) {
    println "executing dbStop ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "stop-database"

}

task startServer(type: Exec, group: 'build setup') {
    println "executing serverStart ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "start-domain", "--debug"
}

task restartApp(type: Exec) {
    println "executing appReStart ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "enable", "banking-server-0.0.1-SNAPSHOT"
}


task stopServer(type: Exec) {
    println "executing serverStop ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }

    args "stop-domain"
}
task reDeploy(dependsOn: 'war', type: Exec) {
    println "executing reDeploy ..."
    workingDir "${glassfishHome}${File.separator}bin"

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat'
    } else {
        commandLine "./asadmin"
    }
    println "${war.archivePath}"
    args "deploy", "--force=true", "${war.archivePath}"
}
startServer.mustRunAfter startDB
stopDB.mustRunAfter stopServer
